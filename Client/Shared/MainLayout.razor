@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Fixed="true">
        
        <MudButton OnClick="@(GoHome)">HOME</MudButton>
        <MudSpacer/>

        <MudTextField T="string" @bind-Value="@TextValue" Immediate="true" Label="Search" Variant="Variant.Outlined" @onkeydown="@Enter" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Search" AdornmentColor="Color.Secondary">
            
        </MudTextField>
            <MudSpacer />
            @* <MudButton OnClick="@(() => { if (@TextValue != null) {Search(@TextValue); } })">click me</MudButton> *@
            
        <div class="navMenuGlue">
            <MudMenu FullWidth="true" ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.CenterCenter" TransformOrigin="Origin.TopCenter">
            <ActivatorContent>
                <MudChip Icon="@Icons.Material.Filled.Mouse" Color="Color.Primary">Mouse over</MudChip>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem>Profile</MudMenuItem>
                <MudMenuItem>Theme</MudMenuItem>
                <MudMenuItem>Usage</MudMenuItem>
                <MudMenuItem>Sign Out</MudMenuItem>
            </ChildContent>
        </MudMenu>
        </div>
        
    </MudAppBar>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>
        
    </MudMainContent>
</MudLayout>
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>

@code {

    private string TextValue { get; set; } = "";

    private readonly MudTheme _theme = new();
    private bool _isDarkMode=true;


    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }


    
    private void Search(string textValue)
    {
        NavigationManager.NavigateTo($"Search/{textValue}");
        TextValue = "";
    }
    
    private void Enter(KeyboardEventArgs e)
    {
        if (e.Code is not ("Enter" or "NumpadEnter") || TextValue.Equals("")) return;
        Search(TextValue);
        TextValue = "";
    }

}