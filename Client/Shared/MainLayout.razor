
@inherits LayoutComponentBase
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<MudLayout>
    <MudAppBar Fixed="true">       

        
        <MudButton OnClick="@(GoHome)">HOME</MudButton>
        <MudSpacer/>

        <MudTextField T="string" @bind-Value="@TextValue" Immediate="true" Label="Search" Variant="Variant.Outlined" @onkeydown="@Enter" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Search" AdornmentColor="Color.Secondary">

        </MudTextField>
        @* <MudButton OnClick="@(() => { if (@TextValue != null) {Search(@TextValue); } })">click me</MudButton> *@
        <MudSpacer/>

        @if (@userFound)
        {
            <div class="dropdown">
                <MudAvatar Size="Size.Large" Color="Color.Info" Variant="Variant.Outlined">@profileLetter</MudAvatar>
                <div class="dropdown-content">
                    <a href="/Profile">Profile</a>
                    <a href="#">Favorites</a>
                    <a href="/Logout">Log out</a>
                </div>
            </div>
        }
        else
        {
            <MudText>@userInfo</MudText>
            <MudButton href="/Login"> Login</MudButton>
            <MudButton href="/Signup"> Register</MudButton>
        }



        @* <MudPaper> *@
        @* *@
        @*     <div class="navMenuGlue"> *@
        @*         <MudMenu FullWidth="true" ActivationEvent="@MouseEvent.LeftClick" AnchorOrigin="Origin.CenterCenter" TransformOrigin="Origin.TopCenter"> *@
        @*             <ActivatorContent> *@
        @*                 <MudChip Icon="@Icons.Material.Filled.Mouse" Color="Color.Primary">Mouse over</MudChip> *@
        @*             </ActivatorContent> *@
        @*             <ChildContent> *@
        @*                 <MudMenuItem>Profile</MudMenuItem> *@
        @*                 <MudMenuItem>Theme</MudMenuItem> *@
        @*                 <MudMenuItem>Usage</MudMenuItem> *@
        @*                 <MudMenuItem>Sign Out</MudMenuItem> *@
        @*             </ChildContent> *@
        @*         </MudMenu> *@
        @*     </div> *@
        @* *@
        @* </MudPaper> *@


    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>

    </MudMainContent>
</MudLayout>
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>

<div class="footer-basic">
    <footer class="stayDown">
        <div class="social">
            <a href="https://github.com/FlaviusAB" target="_blank">
                <MudAvatar title="Flavius" Image="/github_icon.png"/>
            </a>
            <a href="https://github.com/prOcenTas" target="_blank">
                <MudAvatar title="Faustas" Image="/github_icon.png"/>
            </a>
            <a href="https://github.com/Avender" target="_blank">
                <MudAvatar title="Mihai" Image="/github_icon.png"/>
            </a>
        </div>
        <ul class="list-inline">
            <li class="list-inline-item">
                <a href="#">Home</a>
            </li>
            <li class="list-inline-item">
                <a href="/About">About</a>
            </li>
        </ul>
        <p class="copyright">Best Movies © 2022</p>
    </footer>
</div>


@code {
    
    private string userInfo = "";
    private bool userFound = false;
    private string profileLetter;

    private string TextValue { get; set; } = "";

    private readonly MudTheme _theme = new();
    private bool _isDarkMode = true;


    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }

    protected override void OnInitialized()
    {

        var timer = new System.Timers.Timer(1000);
        timer.Elapsed += (s, e) =>
        {
            InvokeAsync(() =>
            {
                
                    AccountService.Initialize();
                    if (AccountService.User?.Username!= null)
                    {
                        userInfo = AccountService.User.Username;
                        profileLetter = userInfo.Substring(0, 1);
                        userFound = true;
                    }
                    else
                    {
                    userFound = false;
                    userInfo = "Not logged in: ";
                    Console.WriteLine(e);
                    StateHasChanged();
                    }
                StateHasChanged();
            });
        };
        timer.Start();
    }

    private void Search(string textValue)
    {
        NavigationManager.NavigateTo($"Search/{textValue}");
        TextValue = "";
    }

    private void Enter(KeyboardEventArgs e)
    {
        if (e.Code is not ("Enter" or "NumpadEnter") || TextValue.Equals("")) return;
        Search(TextValue);
        TextValue = "";
    }

}