@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        
        <MudTextField T="string" @bind-Value="@TextValue" Immediate="true" Label="Search" Variant="Variant.Filled" @onkeydown="@Enter"></MudTextField>
        <MudButton OnClick="@(() => Search(@TextValue))">click me</MudButton>
        
        
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
        <MudContainer MaxWidth="MaxWidth.False">
            <LoginDisplay/>
        </MudContainer>
    </MudDrawer>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>
        
    </MudMainContent>
</MudLayout>
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>

@code {
    bool _drawerOpen = true;

    private string TextValue { get; set; } = "";
    private MudTheme _theme = new();
    private bool _isDarkMode=true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    

    
    private void Enter(KeyboardEventArgs e)
    {
        if ((e.Code == "Enter" || e.Code == "NumpadEnter") && !TextValue.Equals(""))
        {
            NavigationManager.@NavigateTo($"Search/{TextValue}");
            TextValue = "";
        }
    }
    
    private void Search(string textValue)
    {
        NavigationManager.NavigateTo($"Search/{textValue}");
        TextValue = "";
    }

}