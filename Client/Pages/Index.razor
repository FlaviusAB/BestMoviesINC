@page "/"
@using Client.Models.Movies

@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<div class="d-flex justify-center">
    <div class="containerForTitle">
        <MudImage ObjectFit="ObjectFit.Cover" Height="150" Width="1600" Src="/boat.jpg" Alt="banner" Elevation="25" Class="rounded-lg titleImage"/>
        <div class="top-left">
            <h1 class="titleStyle">Best Movies</h1>
        </div>
    </div>
</div>


<MudLayout>
    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
        <p>
            <b>TOP 20 Users Favorites</b>
        </p>
        <div class="container2">
            @if (_isLoading)
            {
                for (int i = 0; i <= 10; i++)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="250px"/>
                }
            }

            @foreach (var item in _profileFavorites)
            {
                var poster = "https://image.tmdb.org/t/p/original" + @item.PosterPath;

                <MudButton OnClick="@(() => MovieDetails(@item.Id))">

                    <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>

                </MudButton>
            }

        </div>
        <div class="paddingTop5"></div>
        <p>
            <b>Trending Movies</b>
        </p>
        <div class="container2">
            @if (_isLoading)
            {
                for (int i = 0; i <= 10; i++)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="250px"/>
                }
            }
            @foreach (var item in _trendingMovies)
            {
                var poster = "https://image.tmdb.org/t/p/original" + @item.PosterPath;

                <MudButton OnClick="@(() => MovieDetails(@item.Id))">

                    <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="100" Class="rounded-lg"/>

                </MudButton>
            }
        </div>
        <div class="paddingTop5"></div>

        <p>
            <b>Popular Movies</b>
        </p>
        <div class="container2">
            @if (_isLoading)
            {
                for (int i = 0; i <= 10; i++)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="250px"/>
                }
            }
            @foreach (var item in _popularMovies)
            {
                var poster = "https://image.tmdb.org/t/p/original" + @item.PosterPath;

                <MudButton OnClick="@(() => MovieDetails(@item.Id))">

                    <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>

                </MudButton>
            }
        </div>
        <div class="paddingTop5"></div>
        <p>
            <b>Trending TV shows</b>
        </p>
        <div class="container2">
            @if (_isLoading)
            {
                for (int i = 0; i <= 10; i++)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="250px"/>
                }
            }
            @foreach (var item in _trendingTVs)
            {
                var poster = "https://image.tmdb.org/t/p/original" + @item.PosterPath;

                <MudButton OnClick="@(() => TvDetails(@item.Id))">

                    <MudImage Src="@poster" Fluid="true" Alt=@item.Name Elevation="25" Class="rounded-lg"/>

                </MudButton>
            }
        </div>
        <div class="empty-space"></div>
    </MudContainer>
</MudLayout>

@code {

    [Inject]
    private IDbAccess? DbAccess { get; set; }

    [Inject]
    private IMoviesData? MoviesData { get; set; }

    private List<Movie> _trendingMovies = new();
    private List<Movie> _popularMovies = new();

    private List<Tv> _trendingTVs = new();

    List<string>? _allFavorites;
    private readonly List<Movie> _profileFavorites = new();
    Movie _favoriteEntity = new Movie();

    bool _isLoading;


    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        _allFavorites = await GetAllUsersFavorites()!;

        foreach (var str in _allFavorites!)
        {
            _favoriteEntity = await MoviesData?.GetMovieDetails(str)!;
            _profileFavorites.Add(_favoriteEntity);
        }

        _trendingMovies = new List<Movie>();
        if (MoviesData != null)
        {
            _trendingMovies = await MoviesData.GetTrending();

            _popularMovies = new List<Movie>();
            _popularMovies = await MoviesData.GetPopular();

            _trendingTVs = new List<Tv>();
            _trendingTVs = await MoviesData.GetTrendingTv();
        }
        _isLoading = false;
    }

    private async Task<List<string>?>? GetAllUsersFavorites()
    {
        List<string>? allFav = await DbAccess?.GetAllUsersFavorite();
        return allFav;
    }

    void MovieDetails(int id)
    {
        NavigationManager.NavigateTo($"MovieDetails/{id}");
    }

    void TvDetails(int id)
    {
        NavigationManager.NavigateTo($"TVDetails/{id}");
    }




}