@page "/Name/{Value}"
@using Client.Models
@using Client.Services
@inject NavigationManager navigationManager

<MudLayout>
    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
        <MudGrid>
            <MudItem xs="12" sm="3">
               
                   
                @if (@profilePath == null)
                {
                    <MudImage Width="300" Height="218" Src="/wp-person-placeholder.png" Fluid="true" Alt="@personName" Elevation="25" Class="rounded-lg"/>
                }
                else
                {
                    <MudImage Width="300" Height="218" Src="@profilePath" Fluid="true" Alt="@personName" Elevation="25" Class="rounded-lg"/>
                }
                
                
            </MudItem>
            <MudItem xs="12" sm="9">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">
                                @personName
                            </MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Class="pt-2">
                            @personBiograpgy
                        </MudText>
                        <MudText Class="pt-2">
                            <span class="pr-5">Born:</span><span>@personDOB</span><span> in </span><span>@personPlaceOfBirth</span>
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
        <div class = "known"><p><b>Known for:</b></p></div>
        
        <div class="container" style="height: 310px">
            @foreach (var item in movies)
            {
                var poster = "";
                if (@item.PosterPath == null)
                {
                    poster = "/no-image-icon-6.png";
                    <MudButton OnClick="@(() => MovieDetails(@item.Id))">
                        <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                            <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                            <p class="no-image-text">@item.Title</p>
                        </MudPaper>
                    </MudButton>
                }
                else
                {
                    poster = "https://image.tmdb.org/t/p/w200" + @item.PosterPath;
                    <MudButton OnClick="@(() => MovieDetails(@item.Id))">
                        <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                            <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                        </MudPaper>
                    </MudButton>
                }
            }
        </div>
    </MudContainer>
</MudLayout>




@code {
    [Inject] private IMoviesData MoviesData { get; set; }
    
    HttpClient client = new ();
    [Parameter]
    public string Value { get; set; }
    
    public string profilePath { get; set; }
    public string personName { get; set; }
    public string personDOB { get; set; }
    public string personBiograpgy { get; set; }
    public string personPlaceOfBirth { get; set; }
    
    private List<Movie> movies = new();
    
    
    protected override async Task OnParametersSetAsync()
    {
    
        var id = Value;
        await NameApi(id);
        await CreditApi(id);
    }

    private async Task NameApi(string id)
    {
        var obj = await MoviesData.GetMovieCastSingle(id);

        profilePath = "https://image.tmdb.org/t/p/w200" + obj.profile_path;
        
        personName = obj.name;
        personDOB = obj.birthday;
        personBiograpgy = obj.biography;
        personPlaceOfBirth = obj.place_of_birth;

    }

    private async Task CreditApi(string id)
    {
        movies = new List<Movie>();
        movies = await MoviesData.GetMovieCredits(id);
    }
    
    void MovieDetails(int id)
    {
        navigationManager.NavigateTo($"MovieDetails/{id}");
    }
}