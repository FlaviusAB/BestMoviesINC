@page "/Name/{Value}"
@inject NavigationManager NavigationManager

<MudLayout>
    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
        <MudGrid>
            <MudItem xs="12" sm="3">
                @if (ProfilePath == null)
                {
                    <MudImage Width="299" Height="399" Src="/wp-person-placeholder.png" Fluid="true" Alt="@PersonName" Elevation="25" Class="rounded-lg"/>
                }
                else
                {
                    <MudImage Width="299" Height="399" Src="@ProfilePath" Fluid="true" Alt="@PersonName" Elevation="25" Class="rounded-lg"/>
                }
            </MudItem>
            <MudItem xs="12" sm="9">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">
                                @PersonName
                            </MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <div class="box">
                        <span>
                            @Math.Round(_ratings, 2)
                        </span>
                    </div>
                    <MudCardContent>
                        <MudText Class="paddingTop2">
                            @PersonBiography
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5 bold">Born:</span><span>@PersonDob</span><span>@PersonPlaceOfBirth</span>
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>

        @if (_movies.Count != 0)
        {
            <p class="knownFor">
                <b>Known for: @_movies.Count Movies </b>
            </p>
            <div class="container2">
                @foreach (var item in _movies)
                {
                    string poster;
                    if (@item.PosterPath == null)
                    {
                        poster = "/no-image-icon-6.png";
                        <MudButton OnClick="@(() => MovieDetails(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                                <MudImage id="noImagePoster" Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                                <p class="no-image-text">@item.Title</p>
                            </MudPaper>
                        </MudButton>
                    }
                    else
                    {
                        poster = "https://image.tmdb.org/t/p/w200" + @item.PosterPath;
                        <MudButton OnClick="@(() => MovieDetails(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                                <MudImage id="noImagePoster" Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                            </MudPaper>
                        </MudButton>
                    }
                }
            </div>
            <div class="paddingTop5"></div>
        }
        @if (_tvs.Count != 0)
        {
            <p class="knownFor">
                <b> @_tvs.Count TV shows </b>
            </p>
            <div class="container2">
                @foreach (var item in _tvs)
                {
                    string poster;
                    if (@item.PosterPath == null)
                    {
                        poster = "/no-image-icon-6.png";
                        <MudButton OnClick="@(() => TvDetails(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                                <MudImage id="noImagePoster" Src="@poster" Fluid="true" Alt=@item.Name Elevation="25" Class="rounded-lg"/>
                                <p class="no-image-text">@item.Name</p>
                            </MudPaper>
                        </MudButton>
                    }
                    else
                    {
                        poster = "https://image.tmdb.org/t/p/w200" + @item.PosterPath;
                        <MudButton OnClick="@(() => TvDetails(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                                <MudImage id="noImagePoster" Src="@poster" Fluid="true" Alt=@item.Name Elevation="25" Class="rounded-lg"/>
                            </MudPaper>
                        </MudButton>
                    }
                }
            </div>
            <div class="paddingTop5"></div>
        }

    </MudContainer>
</MudLayout>


@code {

    [Inject]
    private IMoviesData? MoviesData { get; set; }


    [Parameter]
    public string? Value { get; set; }

    private string? ProfilePath { get; set; }
    private string? PersonName { get; set; }
    private string? PersonDob { get; set; }
    private string? PersonBiography { get; set; }
    private string? PersonPlaceOfBirth { get; set; }

    private List<Movie> _movies = new();
    private List<Tv> _tvs = new();

    private double _ratings;

    protected override async Task OnParametersSetAsync()
    {
        var id = Value;
        if (id != null)
        {
            await NameApi(id);
            await TotalStats(id);
            await CreditApi(id);
        }
    }

    private async Task NameApi(string id)
    {
        var obj = await MoviesData?.GetMovieCastSingle(id)!;
        if (obj.ProfilePath == null)
        {
            ProfilePath = "/wp-person-placeholder.png";
        }
        else
        {
            ProfilePath = "https://image.tmdb.org/t/p/original" + obj.ProfilePath;
        }


        PersonName = obj.Name;
        PersonDob = obj.Birthday;
        PersonBiography = obj.Biography;
        if (obj.PlaceOfBirth == null)
        {
            PersonPlaceOfBirth = "";
        }
        else
        {
            PersonPlaceOfBirth = " in " + obj.PlaceOfBirth;
        }
    }


    private async Task TotalStats(string id)
    {
        if (MoviesData != null)
        {
            _movies = new List<Movie>();
            if (MoviesData != null) _movies = await MoviesData.GetMovieCredits(id);

            var totalRatings = 0.0;
            var count = 0;

            foreach (var item in _movies)
            {
                if (item.VoteCount > 1)
                {
                    totalRatings += item.VoteAverage;
                    count++;
                }
            }
            _ratings = totalRatings / count;
        }
    }

    private async Task CreditApi(string id)
    {
        _movies = new List<Movie>();
        if (MoviesData != null) _movies = await MoviesData.GetMovieCredits(id);
        _tvs = new List<Tv>();
        if (MoviesData != null) _tvs = await MoviesData.GetTvCredits(id);
    }

    void MovieDetails(int id)
    {
        NavigationManager.NavigateTo($"MovieDetails/{id}");
    }

    void TvDetails(int id)
    {
        NavigationManager.NavigateTo($"TVDetails/{id}");
    }

}