@page "/MovieDetails/{Value}"
@using Client.Models
@using Client.Services
@inject NavigationManager NavigationManager


<MudLayout>
    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
        <MudGrid>
            <MudItem xs="12" sm="3">
                @if (@PosterPath == null)
                {
                    <MudImage Width="299" Height="399" Src="/no-image-icon-6.png" Fluid="true" Alt="@MovieTitle" Elevation="25" Class="rounded-lg"/>
                }
                else
                {
                    <MudImage Width="299" Height="399" Src="@PosterPath" Fluid="true" Alt="@MovieTitle" Elevation="25" Class="rounded-lg"/>
                }
            </MudItem>
            <MudItem xs="12" sm="9">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">
                                @MovieTitle
                            </MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <div>
                            <span>
                                <div class="box">
                                    <span>
                                        @VoteAverage
                                    </span>
                                </div>

                                <div class="box">
                                    @VoteCount <span class="something">ratings</span>
                                </div>
                            </span>
                            <br/>
                            <br/>
                        </div>
                        <div>
                            <span>Runtime:</span>
                            <span id="lime">
                                @RunTime
                            <span>
                                <div class="smallBox">
                                    <span>Runtime:</span>
                                </div>
                                <div id="lime">
                                    @runTime
                                </div>
                            </span>

                        </div>
                        <MudText Class="paddingTop2 paddingBottom5">
                            @MovieDescription
                        </MudText>
                        <MudText>
                            <span class="paddingRight5" id="bold">Country:</span><span>@CountryName</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Genre:</span><span>@Genre</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Director(s):</span>
                            @for (int i = 0; i < _crew.Count; i++)
                            {
                                if (i < _crew.Count - 1)
                                {
                                    _crewName = _crew[i].Name + ", ";
                                }
                                else
                                {
                                    _crewName = _crew[i].Name;
                                }
                                var num = i;
                                <button>
                                    <a class="abc" onclick="@(() => NamePage(_crew[num].Id))"> 
                                        <span class="paddingRight2"> 
                                            @_crewName
                                        </span> 
                                    </a>
                                </button>
                            }
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Released:</span><span>@ReleaseDate</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Production:</span><span>@ProductionCompanies</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Casts:</span>
                            @if (_people.Count >= 10)
                            {
                                @for (int i = 0; i < 10; i++)
                                {
                                    if (i < 9)
                                    {
                                        Cast = _people[i].Name + ", ";
                                    }
                                    else
                                    {
                                        Cast = _people[i].Name;
                                    }
                                    var num = i;
                                    <button>
                                        <a class="abc" onclick="@(() => NamePage(_people[num].Id))"> 
                                            <span class="paddingRight2"> 
                                                @Cast
                                            </span> 
                                        </a>
                                    </button>
                                }
                            }
                            else
                            {
                                @for (int i = 0; i < _people.Count; i++)
                                {
                                    if (i < _people.Count)
                                    {
                                        Cast = _people[i].Name + ", ";
                                    }
                                    else
                                    {
                                        Cast = _people[i].Name;
                                    }
                                    var num = i;
                                    <button>
                                        <a class="abc" onclick="@(() => NamePage(_people[num].Id))"> 
                                            <span class="paddingRight2"> 
                                                @Cast
                                            </span> 
                                        </a>
                                    </button>
                                }
                            }
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <p class="knownFor">
                        <b>Similar movies:</b>
                    </p>
            <div class="container2" style="height: 310px">
                @foreach (var item in _movies)
                {
                    var poster = "";
                    if (@item.PosterPath == null)
                    {
                        poster = "/no-image-icon-6.png";
                        <MudButton OnClick="@(() => SimilarMovies(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 399px; width: 299px">
                                <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                                <p class="no-image-text">@item.Title</p>
                            </MudPaper>
                        </MudButton>
                    }
                    else
                    {
                        poster = "https://image.tmdb.org/t/p/w200" + @item.PosterPath;
                        <MudButton OnClick="@(() => SimilarMovies(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                                <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                            </MudPaper>
                        </MudButton>
                    }
                }
            </div>
        </MudGrid>
    </MudContainer>
</MudLayout>

@code {
    
    [Inject] private IMoviesData? MoviesData { get; set; }
    
    [Parameter]
    public string? Value { get; set; }

    private string? PosterPath { get; set; }
    private string? MovieTitle { get; set; }
    private string? MovieDescription { get; set; }
    private string? RunTime { get; set; }
    private string? VoteAverage { get; set; }
    private int? VoteCount { get; set; }
    private string? ReleaseDate { set; get; }
    private List<ProductionCountry>? _productionCountry;
    private string? CountryName { get; set; }
    private List<Genre>? _genres;
    private string? Genre { get; set; }
    private List<ProductionCompany>? _productionCompanyList;
    private string? ProductionCompanies { get; set; }
    private List<PeopleEntity> _people = new();
    private List<PeopleEntity> _crewList = new();
    

    [Parameter]public string? Cast { get; set; }
    private readonly List<PeopleEntity> _crew = new();
    private string _crewName = "";
    private List<Movie> _movies = new();
    
    protected override async Task OnParametersSetAsync()
    {
        Genre = "";
        ProductionCompanies = "";
        Cast = "";
        var id = Value;
        if (id != null)
        {
            await MovieDetailsApi(id);
            await MovieCastApi(id);
            await Similar(id);
            await MovieCrewApi(id);
        }
    }

    private async Task  MovieDetailsApi(string id)
    {
        if (MoviesData != null)
        {
            var obj = await MoviesData.GetMovieDetails(id);
            if (obj.PosterPath == null)
            {
                PosterPath = "/no-image-icon-6.png";
            }
            else
            {
                PosterPath = "https://image.tmdb.org/t/p/w200" + obj.PosterPath; 
            }
        
            MovieTitle = obj.Title;
            MovieDescription = obj.Overview;
            RunTime = obj.Runtime + " min";
            VoteAverage = obj.VoteAverage + "/10";
            VoteCount = obj.VoteCount;
            ReleaseDate = obj.ReleaseDate;
            _productionCountry = obj.ProductionCountries;
            _genres = obj.Genres;
            _productionCompanyList = obj.ProductionCompanies;
        }

        if (_productionCountry != null)
            for (var i = 0; i < _productionCountry.Count; i++)
            {
                if (i < _productionCountry.Count - 1)
                {
                    CountryName = _productionCountry[i].Name + ", ";
                }
                else
                {
                    CountryName = _productionCountry[i].Name;
                }
            }

        for (var i = 0; i < _genres!.Count; i++)
        {
            if (i < _genres.Count - 1)
            {
                Genre += _genres[i].Name + ", ";
            }
            else
            {
                Genre += _genres[i].Name;
            }
        }
        
        for (var i = 0; i < _productionCompanyList!.Count; i++)
        {
            if (i < _productionCompanyList.Count - 1)
            {
                ProductionCompanies += _productionCompanyList[i].Name + ", ";
            }
            else
            {
                ProductionCompanies += _productionCompanyList[i].Name;
            }
        }
    }

    private async Task MovieCastApi(string id)
    {
        _people = await MoviesData!.GetMovieCast(id);
    }
    
    private async Task MovieCrewApi(string id)
    {
        _crewList = await MoviesData!.GetMovieCrew(id);
        foreach (var cr in _crewList)
        {
            if (cr.Department == "Directing")
            {
                _crew.Add(cr);
            }
        }
        
        
    }
    
    private  void NamePage(int id)
    {
        NavigationManager.NavigateTo($"Name/{id}");
    }
    
    private int Count { get; set; } = 10;

    void SimilarMovies(int id)
    {
        NavigationManager.NavigateTo($"MovieDetails/{id}");
    }
    
    
    
    
    private async Task Similar(string id)
    {
        _movies = new List<Movie>();
        _movies = await MoviesData!.GetSimilar(id);
    }
}