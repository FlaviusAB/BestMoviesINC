@page "/MovieDetails/{Value}"
@using Client.Models
@using Client.Services
@using System.Threading
@inject NavigationManager NavigationManager


<MudLayout>
    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
        <MudGrid>
            <MudItem xs="12" sm="3">
                @if (@posterPath == null)
                {
                    <MudImage Width="299" Height="399" Src="/no-image-icon-6.png" Fluid="true" Alt="@movieTitle" Elevation="25" Class="rounded-lg"/>
                }
                else
                {
                    <MudImage Width="299" Height="399" Src="@posterPath" Fluid="true" Alt="@movieTitle" Elevation="25" Class="rounded-lg"/>
                }
                </MudItem>
                @if (posterPath == null)
                {
                    <MudImage Width="300" Height="218" Src="no-image-icon-6.png" Fluid="true" Alt="@movieTitle" Elevation="25" Class="rounded-lg"/>
                }
                else
                {
                    <MudImage Width="300" Height="218" Src="@posterPath" Fluid="true" Alt="@movieTitle" Elevation="25" Class="rounded-lg"/>
                }
            </MudItem>
            <MudItem xs="12" sm="9">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">
                                @movieTitle
                            </MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <div>
                            <span>
                                <div class="box">
                                    <span>
                                        @voteAverage
                                    </span>
                                </div>

                                <div class="box">
                                    @voteCount <span class="something">ratings</span>
                                </div>
                            </span>
                        </div>
                        <div>
                            <span>Runtime:</span>
                            <span id="lime">
                                @runTime
                            </span>
                        </div>
                        <MudText Class="paddingTop2 paddingBottom5">
                            @movieDescription
                        </MudText>
                        <MudText>
                            <span class="paddingRight5" id="bold">Country:</span><span>@countryName</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Genre:</span><span>@genre</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Director(s):</span>
                            @for (int i = 0; i < crew.Count; i++)
                            {
                                if (i < crew.Count - 1)
                                {
                                    crewName = crew[i].name + ", ";
                                }
                                else
                                {
                                    crewName = crew[i].name;
                                }
                                var num = i;
                                <button>
                                    <a class="abc" onclick="@(() => NamePage(crew[num].id))"> 
                                        <span class="paddingRight2"> 
                                            @crewName
                                        </span> 
                                    </a>
                                </button>
                            }
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Released:</span><span>@releaseDate</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Production:</span><span>@productionCompanies</span>
                        </MudText>
                        <MudText Class="paddingTop2">
                            <span class="paddingRight5" id="bold">Casts:</span>
                            @if (people.Count >= 10)
                            {
                                @for (int i = 0; i < 10; i++)
                                {
                                    if (i < 9)
                                    {
                                        cast = people[i].name + ", ";
                                    }
                                    else
                                    {
                                        cast = people[i].name;
                                    }
                                    var num = i;
                                    <button>
                                        <a class="abc" onclick="@(() => NamePage(people[num].id))"> 
                                            <span class="paddingRight2"> 
                                                @cast
                                            </span> 
                                        </a>
                                    </button>
                                }
                            }
                            else
                            {
                                @for (int i = 0; i < people.Count; i++)
                                {
                                    if (i < people.Count)
                                    {
                                        cast = people[i].name + ", ";
                                    }
                                    else
                                    {
                                        cast = people[i].name;
                                    }
                                    var num = i;
                                    <button>
                                        <a class="abc" onclick="@(() => NamePage(people[num].id))"> 
                                            <span class="paddingRight2"> 
                                                @cast
                                            </span> 
                                        </a>
                                    </button>
                                }
                            }
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            
            <div class="container2" style="height: 310px">
                @foreach (var item in movies)
                {
                    var poster = "";
                    if (@item.PosterPath == null)
                    {
                        poster = "/no-image-icon-6.png";
                        <MudButton OnClick="@(() => SimilarMovies(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 399px; width: 299px">
                                <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                                <p class="no-image-text">@item.Title</p>
                            </MudPaper>
                        </MudButton>
                    }
                    else
                    {
                        poster = "https://image.tmdb.org/t/p/w200" + @item.PosterPath;
                        <MudButton OnClick="@(() => SimilarMovies(@item.Id))">
                            <MudPaper Elevation="2" Class="pa-4" Style="height: 250px; width: 180px">
                                <MudImage Src="@poster" Fluid="true" Alt=@item.Title Elevation="25" Class="rounded-lg"/>
                            </MudPaper>
                        </MudButton>
                    }
                }
            </div>
        </MudGrid>
    </MudContainer>
</MudLayout>

@code {
    
    [Inject] private IMoviesData MoviesData { get; set; }
    
    [Parameter]
    public string Value { get; set; }

    private string posterPath { get; set; }
    private string movieTitle { get; set; }
    private string movieDescription { get; set; }
    private string runTime { get; set; }
    private string voteAverage { get; set; }
    private int voteCount { get; set; }
    private string releaseDate { set; get; }
    private List<ProductionCountry> productionCountry;
    private string countryName { get; set; }
    private List<Genre> genres;
    private string genre { get; set; }
    private List<ProductionCompany> productionCompanyList;
    private string productionCompanies { get; set; }
    private List<PeopleEntity> people = new();
    private List<PeopleEntity> crewList = new();
    

    [Parameter]public string cast { get; set; }
    private List<PeopleEntity> crew = new();
    private string crewName = "";
    protected override async Task OnParametersSetAsync()
    {
        genre = "";
        productionCompanies = "";
        cast = "";
        var id = Value;
        await MovieDetailsApi(id);
        await MovieCastApi(id);
        await Similar(id);
        await MovieCrewApi(id);
    }

    private async Task  MovieDetailsApi(string id)
    {

        var obj = await MoviesData.GetMovieDetails(id);
        if (obj.PosterPath == null)
        {
            posterPath = "/no-image-icon-6.png";
        }
        else
        {
            posterPath = "https://image.tmdb.org/t/p/w200" + obj.PosterPath; 
        }
        
        movieTitle = obj.Title;
        movieDescription = obj.Overview;
        runTime = obj.Runtime + " min";
        voteAverage = obj.VoteAverage + "/10";
        voteCount = obj.VoteCount;
        releaseDate = obj.ReleaseDate;
        productionCountry = obj.ProductionCountries;
        genres = obj.Genres;
        productionCompanyList = obj.ProductionCompanies;

        for (var i = 0; i < productionCountry.Count; i++)
        {
            if (i < productionCountry.Count - 1)
            {
                countryName = productionCountry[i].Name + ", ";
            }
            else
            {
                countryName = productionCountry[i].Name;
            }
        }

        for (var i = 0; i < genres.Count; i++)
        {
            if (i < genres.Count - 1)
            {
                genre += genres[i].Name + ", ";
            }
            else
            {
                genre += genres[i].Name;
            }
        }
        
        for (var i = 0; i < productionCompanyList.Count; i++)
        {
            if (i < productionCompanyList.Count - 1)
            {
                productionCompanies += productionCompanyList[i].Name + ", ";
            }
            else
            {
                productionCompanies += productionCompanyList[i].Name;
            }
        }
    }

    private async Task MovieCastApi(string id)
    {
        people = await MoviesData.GetMovieCast(id);
    }
    
    private async Task MovieCrewApi(string id)
    {
        crewList = await MoviesData.GetMovieCrew(id);
        foreach (var cr in crewList)
        {
            if (cr.department == "Directing")
            {
                crew.Add(cr);
            }
        }
        
        
    }
    
    private  void NamePage(int id)
    {
        NavigationManager.NavigateTo($"Name/{id}");
    }
    
    private int Count { get; set; } = 10;

    void SimilarMovies(int id)
    {
        NavigationManager.NavigateTo($"MovieDetails/{id}");
    }
    
    
    
    private List<Movie> movies = new();
    
    private async Task Similar(string id)
    {
        movies = new List<Movie>();
        movies = await MoviesData.GetSimilar(id);
    }
}